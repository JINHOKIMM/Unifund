<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- 이 xml 은 어떤 interface 를 참조해서 사용해야 하는가? -->
<mapper namespace="com.uni.fund.crew.dao.CrewDAO">
	<select id="crewOverlay" resultType="int">
		SELECT COUNT(crew_name) FROM crew WHERE crew_name = #{param1}
	</select>
	
	<insert id="crewCreateDo"
		useGeneratedKeys="true" 
		keyColumn="crew_idx" 
		keyProperty="crew_idx"
		 parameterType="com.uni.fund.crew.dto.CrewDTO">
		INSERT INTO crew (mem_idx,crew_name,crew_exp,crew_con,crew_num,crew_link,crew_local)
			VALUES(#{mem_idx},#{crew_name},#{crew_exp},#{crew_con},#{crew_num},#{crew_link},#{crew_local})
	</insert>
	
 	<insert id="crewActivityWrite"	
		useGeneratedKeys="true" 
		keyColumn="crew_activity_details_idx" 
		keyProperty="crew_activity_details_idx"
		 parameterType="com.uni.fund.crew.dto.CrewDTO">
		INSERT crew_activity_details(crew_idx,activity_details)
		VALUES(#{crew_idx},#{activity_details})
	</insert> 	

 	<insert id="memberListInsert">
		INSERT INTO crewMember_list (crew_idx,mem_idx,state)
		VALUES(#{param1},#{param2},'크루장')
	</insert>
	
	<insert id="memberHistoryInsert">
		INSERT INTO crewMember_history (crew_idx,mem_idx,crew_mem_status)
		VALUES(#{param1},#{param2},'K')
	</insert> 
	
	<insert id="createCrewLogoPhoto">
		INSERT INTO photo(ref_idx, pho_name, pho_division)
		VALUES(#{param1},#{param2},#{param3})
	</insert>
	
	<insert id="createCrewRecruPhoto">
		INSERT INTO photo(ref_idx, pho_name, pho_division)
		VALUES(#{param1},#{param2},#{param3})
	</insert>
	
	<insert id="crewActivityPhoto">
		INSERT INTO photo(ref_idx,pho_name,pho_division)
		VALUES(#{param1},#{param2},#{param3})
	</insert>
	
	<insert id="crewActicityDescribe">
		INSERT INTO crew_activity_details(crew_idx,activity_details)
		VALUES (#{param1},#{param2})
	</insert>
	
	<select id="crewUpdateForm" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT crew_idx,crew_name,crew_exp,crew_con,crew_num,crew_link,crew_local
			FROM crew WHERE crew_idx = ${param1}
	</select>
	
	<select id="crewPhoto" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT pho_name
		FROM crew c 
		JOIN (
  		  SELECT * 
    		FROM photo 
    		WHERE pho_division = '크루로고' OR pho_division='모집설명'
		) p ON c.crew_idx = p.ref_idx			
	</select>
	
	<update id="crewUpdate" parameterType="map">
		UPDATE crew SET
			<!-- crew_name=#{crew_name}, -->
			crew_exp=#{crew_exp},
			crew_con=#{crew_con},
			crew_num=#{crew_num},
			crew_link=#{crew_link},
			crew_local=#{crew_local}
		WHERE crew_idx=	#{crew_idx}
	</update>
	
	<select id="activityList" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT
			crew_activity_details_idx
 			,activity_details
  			,(SELECT pho_name FROM photo
  			WHERE pho_division ='활동내역'
  			AND ref_idx=cad.crew_activity_details_idx
  			ORDER BY pho_idx) AS activity_photo
		FROM crew_activity_details cad
		WHERE crew_idx=#{param1} LIMIT #{param2},#{param3}
	</select>
	
	<select id="crewList" resultType="com.uni.fund.crew.dto.CrewDTO">
	SELECT 
    	(
        SELECT COUNT(crew_logo) FROM crew c
        JOIN (
            SELECT * FROM photo
            WHERE pho_division='크루로고'
        ) p ON c.crew_idx= p.ref_idx
    	) AS pho_cnt,
    	c.crew_idx,
    	c.crew_name,
    	c.crew_exp,
    	c.crew_num,              
    	(
    	SELECT pho_name FROM photo 
    	WHERE pho_division ='크루로고'
    	AND ref_idx= c.crew_idx
    	ORDER BY pho_idx DESC LIMIT 1
    	) AS crew_logo,
    	(SELECT COUNT(*) FROM popularity 
     	WHERE crew_idx = c.crew_idx
    	) AS crew_cool_cnt
    	,(SELECT COUNT(mem_idx) FROM crewMember_list WHERE crew_idx = c.crew_idx
    	) AS crew_current_number,
    	(
    	SELECT COUNT(*) FROM crewMember_list 
    	WHERE crew_idx=c.crew_idx
    	) AS crew_list_cnt
	FROM crew c
	WHERE c.crew_status='A'
	<if test='param1 == "latest"'>
    	ORDER BY c.crew_idx DESC
	</if>
	<if test='param1 == "popularity"'>
    	ORDER BY crew_cool_cnt DESC
	</if>
	<!-- Default order -->
	<if test='param1 != "latest" and param1 != "popularity"'>
    	ORDER BY c.crew_idx DESC
	</if>
		LIMIT 10 OFFSET #{param2}          
	</select>	
	
	<select id="adminList" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT 
    		crew_idx
    		,crew_status
    		,crew_num
    		,crew_name
    		,(SELECT mem_name 
     		FROM member 
     		WHERE mem_idx = (
         		SELECT mem_idx 
         		FROM crewMember_list 
        		WHERE state = '크루장' AND crew_idx = c.crew_idx
     		)) AS crew_leader_name
     		,(SELECT mem_id
     		FROM member 
     		WHERE mem_idx = (
         		SELECT mem_idx 
         		FROM crewMember_list 
        		WHERE state = '크루장' AND crew_idx = c.crew_idx
     		)) AS crew_leader_id
    		,crew_num
    		,crew_date
    		,(SELECT COUNT(*) 
     		FROM popularity 
     		WHERE crew_idx = c.crew_idx) AS crew_cool_cnt
		FROM crew c
		ORDER BY c.crew_idx DESC
		LIMIT 10 OFFSET #{param1}
	</select>

	<select id="allCountPage" resultType="Object">
		SELECT CEIL(COUNT(c.crew_idx) / #{param2}) AS pages,
		c.crew_idx,p.crew_cool_cnt
		FROM crew c 
		left join 
		(SELECT crew_idx,COUNT(*) as crew_cool_cnt FROM popularity group by crew_idx) p on c.crew_idx = p.crew_idx
		 <if test='param1 == "latest"'>
        ORDER BY c.crew_idx DESC
    	</if>
    	<if test='param1 == "popularity"'>
        	ORDER BY crew_cool_cnt DESC
    	</if>
    	<!-- Default order -->	
    	<if test='param1 != "latest" and param1 != "popularity"'>
        	ORDER BY c.crew_idx DESC
    	</if>	
	</select>
	
	<select id="detailCrewMemberCountPage" resultType="Object">
    	SELECT CEIL(COUNT(crewMember_list_idx) / #{param1}) AS pages FROM crewMember_list WHERE crew_idx=#{param2}
	</select>
	
	<select id="activityListCount" resultType="Object">
		SELECT CEIL(COUNT(crew_activity_details_idx) / #{param1}) AS pages FROM crew_activity_details WHERE crew_idx=#{param2}
	</select>
	
	<select id="adminAllCount" resultType="Object">
		SELECT CEIL(COUNT(crew_idx)/#{param1}) AS pages FROM crew
	</select>
	
	<select id="adminSearch" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT 
    		crew_idx
    		,crew_num
    		,crew_name
    		,(SELECT mem_name 
     		FROM member 
     		WHERE mem_idx = (
         		SELECT mem_idx 
         		FROM crewMember_list 
        		WHERE state = '크루장' AND crew_idx = c.crew_idx
     		)) AS crew_leader_name
    		,crew_num
    		,crew_date
    		,(SELECT COUNT(*) 
     		FROM popularity 
     		WHERE crew_idx = c.crew_idx) AS crew_cool_cnt
		FROM crew c
		WHERE c.crew_name LIKE CONCAT('%', #{param1}, '%')
		ORDER BY c.crew_idx DESC
		LIMIT 10 OFFSET #{param2};
	</select>
	
	<select id="searchCrew" resultType="com.uni.fund.crew.dto.CrewDTO">
    	SELECT 
        	(SELECT COUNT(crew_logo) FROM crew c
			JOIN( 
				SELECT * FROM photo
				WHERE pho_division='크루로고'
			) p ON c.crew_idx= p.ref_idx
			)AS pho_cnt,
			c.crew_idx,
			c.crew_name,
			c.crew_exp,
			c.crew_num,	
			(SELECT pho_name FROM photo 
			WHERE pho_division ='크루로고'
			AND ref_idx= c.crew_idx
			ORDER BY pho_idx DESC LIMIT 1
			) AS crew_logo,
			(
            SELECT COUNT(*) FROM popularity 
            WHERE crew_idx = c.crew_idx
        	) AS crew_cool_cnt
    	FROM crew c
    	WHERE c.crew_name LIKE CONCAT('%', #{param1}, '%') AND c.crew_status='A'
    	ORDER BY c.crew_idx DESC 
    	LIMIT 10 OFFSET #{param2}
	</select>

	<select id="searchCountPage" resultType="int">
    	SELECT CEIL(COUNT(crew_idx) / #{param2}) AS pages FROM crew
    	WHERE crew_name LIKE CONCAT('%',#{param1},'%')
	</select>
	
	<select id="adminSearchAllCount" resultType="Object">
		SELECT CEIL(COUNT(crew_idx) / #{param2}) AS pages FROM crew
    	WHERE crew_name LIKE CONCAT('%',#{param1},'%')
	</select>
	
	<select id="isApplying" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM crewMember_history 
		WHERE mem_idx = #{param1} AND crew_mem_status ='A'
		ORDER BY crew_mem_idx  DESC
		LIMIT 1;
	</select>
	
	<select id="isMember" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) 
		FROM crewMember_list 
		WHERE mem_idx= #{param1}
	</select>
	
	<select id="isOutOrKick" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*)
		FROM crewMember_history 
		WHERE mem_idx = #{param1} 
			AND crew_idx=#{param2}
			AND (crew_mem_status='D' OR crew_mem_status='E')		
		ORDER BY crew_mem_idx  DESC
		LIMIT 1
	</select>
	
	<insert id="applyCrew" parameterType="map">
		INSERT INTO crewMember_history (mem_idx, crew_idx, crew_mem_status) VALUES (#{mem_idx}, #{crew_idx}, 'A')
	</insert>
	
	<select id="crewCoolCheck" resultType="Integer">
		SELECT COUNT(*) FROM popularity WHERE mem_idx=#{param1} AND crew_idx=#{param2}
	</select>
	
	<insert id="crewMakeCool">
		INSERT INTO popularity(mem_idx,crew_idx) VALUES(#{param1},#{param2})
	</insert>
	
	<delete id="crewUncool">
		DELETE FROM popularity WHERE mem_idx=#{param1} AND crew_idx=#{param2}
	</delete>

	<select id="detail" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT
    		c.crew_idx,
    		c.crew_name,
    		c.crew_exp,
    		c.crew_local,
    		c.crew_con,
    		c.crew_link,
    		c.mem_idx,
    		(SELECT pho_name FROM photo
     		WHERE pho_division ='모집설명'
     		AND ref_idx= c.crew_idx
     		ORDER BY pho_idx DESC LIMIT 1) AS crew_recruitment_information,
    		(SELECT pho_name FROM photo 
     		WHERE pho_division ='크루로고'
     		AND ref_idx= c.crew_idx
     		ORDER BY pho_idx DESC LIMIT 1
    		) AS crew_logo,
    		(SELECT COUNT(*) FROM member WHERE mem_status='M') AS mem_status_manager,
    		(SELECT COUNT(*) FROM crewMember_list WHERE state='크루장') AS crew_leader_count,
    		(SELECT COUNT(*) FROM popularity 
     		WHERE crew_idx = c.crew_idx
    		) AS crew_cool_cnt,
    		(SELECT mem_idx FROM crewMember_list WHERE state='크루장' AND crew_idx=#{param2} LIMIT 1) AS crew_leader,
    		(SELECT GROUP_CONCAT(mem_idx) FROM crewMember_list WHERE state='일반크루원' AND crew_idx=#{param2}) AS crew_member,
    		(SELECT mem_idx from member WHERE mem_status='M' AND mem_idx=#{param3}) AS manager_idx,
    		(SELECT mem_status from member WHERE mem_status='M' AND mem_idx=#{param3}) AS mem_status
		FROM crew c
		WHERE crew_idx=#{param2}
	</select>
	
	<select id="appList" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT
			 *,
			 (SELECT mem_id FROM member m WHERE m.mem_idx = ch.mem_idx) as mem_id
		FROM crewMember_history ch
			WHERE crew_idx = #{param1} and crew_mem_status = 'A' ORDER BY crew_mem_idx DESC LIMIT #{param2},#{param3}
	</select>
	
	<select id="allCount" resultType="int">
		SELECT CEIL(COUNT(mem_idx)/#{param1}) AS pages FROM crewMember_history WHERE crew_idx = #{param2} and crew_mem_status = 'A'
	</select>	
	
	<update id="approve">
		UPDATE crewMember_history
		SET crew_mem_status='B', crew_mem_rsn='승인'
		WHERE mem_idx=#{param1} and crew_idx = #{param2}	
	</update>
	
	<insert id="insertCrewMem">
		insert into crewMember_list (crew_idx,mem_idx)
			values (#{param2},#{param1})
	</insert>
	
	
	<select id="stateCheck" resultType="String">
		SELECT crew_status FROM crew WHERE crew_idx=#{param1}
	</select>
	
	<insert id="report">
		INSERT INTO report(mem_idx,ref_idx,rep_content,rep_division) VALUES(#{param3},#{param1},#{param2},'크루')
	</insert>
	
	<update id="crewDelete">
		UPDATE crew SET crew_status='B' WHERE crew_idx=#{param1}
	</update>
	
	<insert id="deleteReason">
		INSERT INTO crew_admin(crew_idx,mem_idx,crew_rsn) VALUES(#{param1},#{param3},#{param2})
	</insert>
	
	<delete id="crewMemberListDelete">
		DELETE FROM crewMember_list WHERE crew_idx=#{param1} AND mem_idx=#{param2}
	</delete>
	
	<delete id="activityDel">
		DELETE FROM crew_activity_details WHERE crew_activity_details_idx=#{param1}
	</delete>
	
	<delete id="activityPhotoDel">
		DELETE FROM photo WHERE ref_idx=#{param1} AND pho_division='활동내역'
	</delete>
	
	<insert id="crewOutMemberHistoryInsert">
		INSERT INTO crewMember_history(crew_idx,mem_idx,crew_mem_status)
		VALUES(#{param1},#{param2},'D')
	</insert>
	
	<select id="detailCrewMember" resultType="com.uni.fund.crew.dto.CrewDTO">
		SELECT 
    		c.state,
    		m.mem_id,
    		m.mem_status,
    		c.crew_idx,
    		c.mem_idx
		FROM crewMember_list c
		JOIN member m ON c.mem_idx = m.mem_idx
		WHERE crew_idx=#{param3}
		LIMIT 5 OFFSET #{param1} 
	</select>
		
	<delete id="crewMemberDeport">
		DELETE FROM crewMember_list WHERE crew_idx=#{param1} AND mem_idx=#{param2}
	</delete>
	
	<insert id="crewMemberDeportHistoryInsert">
		INSERT INTO crewMember_history(crew_idx,mem_idx,crew_mem_status)
		VALUES(#{param1},#{param2},'E')
	</insert>
	
	<update id="refuse">
		UPDATE crewMember_history SET crew_mem_status='C', crew_mem_rsn='거절' WHERE mem_idx=#{param1} and crew_idx=#{param2}
	</update>	
	
	<update id="crewChiefTomemberCrewMemberListUpdate">
		UPDATE crewMember_list SET state='일반크루원' WHERE crew_idx=#{param1} AND mem_idx=#{param2}
	</update>

	<update id="crewMemberToChiefCrewMemberListUpdate">
		UPDATE crewMember_list SET state='크루장' WHERE crew_idx=#{param1} AND mem_idx=#{param2}
	</update>	
	
	<insert id="crewChiefTomemberCrewMemberHistoryInsert">
		INSERT INTO crewMember_history(crew_idx,mem_idx,crew_mem_status)
		VALUES(#{param1},#{param2},'B')
	</insert>
	
	<insert id="crewMemberToChiefCrewMemberHistoryInsert">
		INSERT INTO crewMember_history(crew_idx,mem_idx,crew_mem_status,crew_mem_rsn)
		VALUES(#{param1},#{param2},'K',#{param3})
	</insert>
	
	<delete id="crewListMemberDelete">
		DELETE FROM crewMember_list WHERE crew_idx=#{param1}
	</delete>
	
	<select id="crewMemberList" resultType="int">
		SELECT mem_idx FROM crewMember_list cml WHERE crew_idx =#{param1}	
	</select>
	
	<insert id="crewMemberHistoryInsert">
		INSERT INTO crewMember_history(crew_idx,mem_idx,crew_mem_status)
		VALUES (#{param1},#{param2},'D')
	</insert>
	
	<select id="isCrewCheck" resultType="int">
		SELECT COUNT(*) FROM crewMember_list WHERE mem_idx= #{param1}
	</select>
	
	
</mapper>